{
	"name": "Incrementalcopy",
	"properties": {
		"description": "This pipeline has Git SCM enabled in it...great work done",
		"activities": [
			{
				"name": "Lookup_OldWaterMarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT TableName,WatermarkValue as OldWatermark FROM watermarktable where TableName='@{pipeline().parameters.TableName}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_target_watermark",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Lookup_NewWatermarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select MAX(LastModifytime) as NewWatermarkvalue from @{pipeline().parameters.TableName}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_source",
						"type": "DatasetReference",
						"parameters": {
							"tableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup_OldWaterMarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Lookup_NewWatermarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from @{pipeline().parameters.TableName} where LastModifyTime > '@{activity('Lookup_OldWaterMarkValue').output.firstRow.OldWatermark}' and LastModifyTime <= '@{activity('Lookup_NewWatermarkValue').output.firstRow.NewWatermarkvalue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_source",
						"type": "DatasetReference",
						"parameters": {
							"tableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_targetdb_mulipletables",
						"type": "DatasetReference",
						"parameters": {
							"datasetName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@activity('Lookup_NewWatermarkValue').output.firstRow.NewWatermarkvalue",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_targetdb_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"TableName": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-12-30T08:28:15Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}